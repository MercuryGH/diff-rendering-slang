/// debug macros
///
/// Macros are not exported by modules, so they have to be in a traditional header file.

#pragma once

#ifdef DEBUG

#define if_pixel(x, y) if (all(global_idx.xy == uint2((x), (y))))

#define pdebug2i(v) printf("%s: %d %d\n", #v, v.x, v.y)
#define pdebug3i(v) printf("%s: %d %d %d\n", #v, v.x, v.y, v.z)

#define pdebug(v) printf("%s: %f\n", #v, v)
#define pdebug2(v) printf("%s: %f %f\n", #v, v.x, v.y)
#define pdebug3(v) printf("%s: %f %f %f\n", #v, v.x, v.y, v.z)
#define pdebug4(v) printf("%s: %f %f %f %f\n", #v, v.x, v.y, v.z, v.w)

#define pdebug4x4(m) do { \
    printf("%s row0: %f %f %f %f\n", #m, m[0][0], m[0][1], m[0][2], m[0][3]); \
    printf("%s row1: %f %f %f %f\n", #m, m[1][0], m[1][1], m[1][2], m[1][3]); \
    printf("%s row2: %f %f %f %f\n", #m, m[2][0], m[2][1], m[2][2], m[2][3]); \
    printf("%s row3: %f %f %f %f\n", #m, m[3][0], m[3][1], m[3][2], m[3][3]); \
} while (false)

#else

#define if_pixel(x, y)

#define pdebug(v)
#define pdebug2(v)
#define pdebug3(v)
#define pdebug4(v)

#define pdebug4x4(m)

#endif
